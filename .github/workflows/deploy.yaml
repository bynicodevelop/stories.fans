name: Stories app Deployment

on:
  release:
    types: [ published ]

jobs: 
  deploy: 
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME_APP: eu.gcr.io/${{ secrets.GCP_SERVICE }}/${{ secrets.GCP_APPLICATION_APP }}
      IMAGE_NAME_WEB_SOCKET_SERVER: eu.gcr.io/${{ secrets.GCP_SERVICE }}/${{ secrets.GCP_APPLICATION_WEBSOCKET_SERVER }}

    steps: 
      - name: Checkout
        uses: actions/checkout@master

      - name: Create .env file
        id: env_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: ".env"
          encodedString: ${{ secrets.ENV }}

      - name: Move .env into project
        run: mv ${{ steps.env_file.outputs.filePath }} ./www

      - name: Deploy to Cloud Run (Setup)
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_SERVICE }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
        
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0.8'

      - name: Install dependencies
        working-directory: ./www
        run: | 
          composer install --prefer-dist

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies (Node)
        working-directory: ./www
        run: |
          npm i
          npm run prod

      - name: Build docker web socker server
        run: docker build ./docker/laravel-echo -t $IMAGE_NAME_WEB_SOCKET_SERVER

      - name: Push Docker image web socker server
        run: docker push $IMAGE_NAME_WEB_SOCKET_SERVER

      - name: Build docker website
        run: docker build -t $IMAGE_NAME_APP -f docker/app/Dockerfile .

      - name: Push Docker image website
        run: docker push $IMAGE_NAME_APP
          
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }} | base64
          username: ${{ secrets.SSH_USERNAME }}
          script: |
            docker pull eu.gcr.io/${{ secrets.GCP_SERVICE }}/${{ secrets.GCP_APPLICATION_APP }}:latest
            docker pull eu.gcr.io/${{ secrets.GCP_SERVICE }}/${{ secrets.GCP_APPLICATION_WEBSOCKET_SERVER }}:latest
            docker stop /website_nicodevelop
            docker stop /laravel_echo_nicodevelop
            docker stop /redis_nicodevelop
            docker run -d --rm --name=redis_nicodevelop --network=backend -v /var/www/redis:/data redis
            docker run -d --rm --name=laravel_echo_nicodevelop --network=backend -p 8443:6001 -e LARAVEL_ECHO_SERVER_AUTH_HOST=http://website_nicodevelop -e ECHO_REDIS_HOSTNAME=redis_nicodevelop -e ECHO_PORT=2053 -e ECHO_REDIS_PORT=6379 -e ECHO_ALLOW_CORS=true -e ECHO_ALLOW_ORIGIN=https://stories.fans -e ECHO_DEVMODE=false -e LARAVEL_ECHO_SERVER_DEBUG=false eu.gcr.io/${{ secrets.GCP_SERVICE }}/${{ secrets.GCP_APPLICATION_WEBSOCKET_SERVER }}
            docker run -d --rm --name=website_nicodevelop --network=backend -p 80:80 -v /var/www/storage:/var/www/html/storage eu.gcr.io/${{ secrets.GCP_SERVICE }}/${{ secrets.GCP_APPLICATION_APP }}
            docker exec -t website_nicodevelop chown -R www-data /var/www/html/storage
            docker exec -t website_nicodevelop php artisan migrate --force